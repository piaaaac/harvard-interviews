@charset "UTF-8";
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

// Settings
// ==================================================
$hamburger-padding-x                       : 0px !default;
$hamburger-padding-y                       : 0px !default;
$hamburger-layer-width                     : 20px !default;
$hamburger-layer-height                    : 2px !default;
$hamburger-layer-spacing                   : 5px !default;
$hamburger-layer-color                     : #fff !default;
$hamburger-layer-border-radius             : 4px !default;
$hamburger-hover-opacity                   : 1 !default;
$hamburger-hover-transition-duration       : 0.15s !default;
$hamburger-hover-transition-timing-function: linear !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter: false !default;
$hamburger-hover-filter    : opacity(50%) !default;

// Types (Remove or comment out what you donâ€™t need)
// ==================================================
$hamburger-types: (
  3dx,
  3dx-r,
  3dy,
  3dy-r,
  3dxy,
  3dxy-r,
  arrow,
  arrow-r,
  arrowalt,
  arrowalt-r,
  arrowturn,
  arrowturn-r,
  boring,
  collapse,
  collapse-r,
  elastic,
  elastic-r,
  emphatic,
  emphatic-r,
  minus,
  slider,
  slider-r,
  spin,
  spin-r,
  spring,
  spring-r,
  stand,
  stand-r,
  squeeze,
  vortex,
  vortex-r
) !default;

// Base Hamburger (We need this)
// ==================================================
@import './hamburgers/_base';

// Hamburger types
// ==================================================
// @import './hamburgers/types/_3dx';
// @import './hamburgers/types/_3dx-r';
// @import './hamburgers/types/_3dy';
// @import './hamburgers/types/_3dy-r';
// @import './hamburgers/types/_3dxy';
// @import './hamburgers/types/_3dxy-r';
// @import './hamburgers/types/_arrow';
// @import './hamburgers/types/_arrow-r';
// @import './hamburgers/types/_arrowalt';
// @import './hamburgers/types/_arrowalt-r';
// @import './hamburgers/types/_arrowturn';
// @import './hamburgers/types/_arrowturn-r';
// @import './hamburgers/types/_boring';
// @import './hamburgers/types/_collapse';
// @import './hamburgers/types/_collapse-r';
// @import './hamburgers/types/_elastic';
// @import './hamburgers/types/_elastic-r';
// @import './hamburgers/types/_emphatic';
// @import './hamburgers/types/_emphatic-r';
// @import './hamburgers/types/_minus';
@import './hamburgers/types/_slider';
// @import './hamburgers/types/_slider-r';
// @import './hamburgers/types/_spin';
// @import './hamburgers/types/_spin-r';
// @import './hamburgers/types/_spring';
// @import './hamburgers/types/_spring-r';
// @import './hamburgers/types/_stand';
// @import './hamburgers/types/_stand-r';
// @import './hamburgers/types/_squeeze';
// @import './hamburgers/types/_vortex';
// @import './hamburgers/types/_vortex-r';

// ==================================================
// Cooking up additional types:
//
// The Sass for each hamburger type should be nested
// inside an @if directive to check whether or not
// it exists in $hamburger-types so only the CSS for
// included types are generated.
//
// e.g. hamburgers/types/_new-type.scss
//
// @if index($hamburger-types, new-type) {
//   .hamburger--new-type {
//     ...
//   }
// }

.hamburger.white-text .hamburger-inner {
  &,
  &::before,
  &::after {
    background-color: white;
  }
}

